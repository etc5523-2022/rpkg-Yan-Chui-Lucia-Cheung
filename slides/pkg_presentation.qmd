---
title: "Seattlepetname"
subtitle: "ETC5523 - Assignment 2"
format: 
  revealjs:
    theme: sky
editor: visual
author: "Yan Chui Lucia Cheung"
---

## Purpose of the package

::: incremental
-   easily retrieve the data

-   understand the **preference of primary breeds** and **pet names** of pet owners in Seattle through the function in the package

-   help user to decide an unique name and primary breed that is suitable

-   target user: People who are planning to own a pet in Seattle
:::

## Data decsription {.scrollable}

::: panel-tabset
### Data source

-   Source of the data: [Seattle open data](https://data.seattle.gov/Community/Seattle-Pet-Licenses/jguv-t9rb)

-   Retrieve from: [Tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2019/2019-03-26)

### Variable

```{r}

df <- data.frame( "Variable" = c("license_issue_date", "license_number",
                                 "animals_name", "species", "primary breed",
                                 "secondary breed", "zip code"),
                  "Meaning" = c("The date license issued", "The active pet license",
                                "Name of the licensed pet", "The species of the licensed pet", "Primary breed of the licensed pet",
                                "Secondary breed of the licensed pet", "The zip code of the owner")
)


knitr::kable(df)

```
:::

## Demonstration of the function:

1.  Download from github:

``` r
install.packages("devtools")
devtools::install_github("etc5523-2022/rpkg-Yan-Chui-Lucia-Cheung")
```

2.  Load the library: `seattlepetname`

```{r}

library(seattlepetname)
library(dplyr)
library(ggplot2)

```

``` r
library(seattlepetname)
```

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 1: The preference of primary breeds of pet owners in Seattle
:::

::: {style="font-size: 30px;"}
-   Input: primary breeds

``` r
max_pribreed("Old English Sheepdog")
```

-   Output: The 5 zip code districts that have the **highest number** of a particular primary breed will be returned

```{r}

max_pribreed("Old English Sheepdog")

```

-   It shows a particular primary breeds is more preferred by pet owners in some of the zip code districts
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 2: The zip code that has the **highest number of licensed pets** of a particular year
:::

::: {style="font-size: 30px;"}
-   Input: Year recorded in the data set (from 2015 to 2018)

``` r
zipcode_max("2018")
```

-   Output: A data frame with the zip code districts that have the highest number of licensed pets overall

```{r}

zipcode_max("2018")

```

-   Allows users to understand the distribution of licensed pet of zip code district in Seattle over years
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 3: The zip code that has the **lowest number of licensed pets** of a particular year
:::

::: {style="font-size: 30px;"}
-   Input: Year recorded in the data set (from 2015 to 2018)

``` r
zipcode_min("2018")
```

-   Output: A data frame with the zip code districts that have the lowest number of licensed pets overall

```{r}

zipcode_min("2018")

```

-   Allows users to understand the distribution of licensed pet of zip code district in Seattle over years
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 4: The top 5 pet name of a particular year
:::

::: {style="font-size: 30px;"}
-   Input: Pet names and year recorded in the data set (from 2015 to 2018)

``` r
name_of_the_year("Silas", "2018") # When the name is not on the top 5 list
```

-   Output: A character string will be returned to indicate that the name is not on the top 5 list

```{r}

name_of_the_year("Silas", "2018") # When the name is not on the top 5 list

```

-   Output: A data frame with the top 5 popular names and the respective count of a particular year and a character string to indicate it is on the top 5 list

``` r
name_of_the_year("Lucy", "2018") #When the name is on the top 5 list
```

```{r}

name_of_the_year("Lucy", "2018") #When the name is on the top 5 list

```

-   It allows users to understand the trend of pet name in Seattle
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 5: The number summary of pet distribution in each year
:::

::: {style="font-size: 30px;"}
-   Input: Year recorded in the data set (from 2015 to 2018)

``` r
pet_summary("2018")
```

-   Output: a dataframe will be returned

```{r}

pet_summary("2018")

```

-   It allow users to understand the trend of distribution of pet in Seattle
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
Function 6: The top 10 popular pet name (by species) in Seattle
:::

::: {style="font-size: 30px;"}
-   Input: Species recorded in the data set

``` r
top_name("Dog") 
```

-   Output: A plot that shows the top 10 popular name of a particular species

```{r}

top_name("Dog") 

```

-   It allow users to understand the preference of pet names of pet owners (by species) in Seattle
:::

## Demonstration of the function: {.scrollable}

::: {style="color: #EBA000;"}
 Utilize the function with `ggplot2` and `dplyr`:
:::

::: {style="font-size: 30px;"}

- facilitates the data analysis process

- Users can compare the data from different year utilizing different packages to create meaningful plots 

```{.r}

summary_2016 <- pet_summary("2016") 

summary_2017 <- pet_summary("2017") 

summary_2018 <- pet_summary("2018")

summary <- full_join(summary_2016, summary_2017) 

summary <- full_join(summary, summary_2018) %>%
  select(year, zipcode_count) 
 
ggplot(summary, aes(x = year, y = zipcode_count)) +
  geom_col()


```

```{r}

summary_2016 <- pet_summary("2016") 

summary_2017 <- pet_summary("2017") 

summary_2018 <- pet_summary("2018")

summary <- full_join(summary_2016, summary_2017) 

summary <- full_join(summary, summary_2018) %>%
  select(year, zipcode_count) 
 
ggplot(summary, aes(x = year, y = zipcode_count)) +
  geom_col()


```


:::


## Thanks for listening to the presentation!

![](image/giphy.gif){.absolute top="200" left="250"}
